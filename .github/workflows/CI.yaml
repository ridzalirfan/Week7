name: CI Pipeline
run-name: ${{github.actor}} is learning GitHub Actions
on: [push]
jobs:
  behave-testing:
    runs-on: ubuntu-latest
    permissions:
      issues: write
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: create an issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Simple test issue
          body: my new issue
      # This checks out the code from the repository so that the workflow can work on it.
      - name: list repo
        run:
          ls

      - name: Set up Python environment
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.9'  # Specify Python version (or any other version you need)

      - name: Install Behave
        run: |
          python -m venv venv  # Create a virtual environment
          source venv/bin/activate  # Activate the virtual environment
          pip install --upgrade pip  # Upgrade pip to the latest version
          pip install behave  # Install Behave


      - name: Run Behave tests
        run: |
          source venv/bin/activate  # Activate the virtual environment
          behave --format plain --outfile ./test-results/results.txt  # Save results as text

      # Upload the test results as an artifact
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./test-results/results.txt


      - name: Send Telegram Message on Test Failure(s)
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          curl -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d text="Review failed run, fix the issue(s), and re-run until successful."  

      - name: Send Telegram Message on Test Success
        if: success()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          curl -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d text="ðŸŽ‰ Congratulations! The test run was successful. Commit pushed by: ${{ github.actor }} is working perfectly!"

          
        #Step 7: CD (Prepare files for delivery/deployment)-individual name
      - name: Prepare files
        run: |
          mkdir -p release
          cp -r ./calculator.py ./release/calculator-ridzal.py
          echo "Deployment files prepared."
          ls -l ./release/
      
# Step 8: Upload files to AWS S3
      - name: Upload to AWS S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"
        run: |
          aws s3 cp ./release s3://devops-calculator-app/release-files --recursive


      - name: Send Discord Message on Test Success
        if: success()
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -X POST "${DISCORD_WEBHOOK_URL}" \
          -H "Content-Type: application/json" \
          -d '{
                "content": "ðŸŽ‰ Congratulations! The test run was successful. Commit pushed by: **${{ github.actor }}** is working perfectly!"
              }'




